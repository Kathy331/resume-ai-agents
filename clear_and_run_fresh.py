#!/usr/bin/env python3
"""
Clear Everything and Run Interview Prep Workflow
===============================================

This script will:
1. Clear the OpenAI cache completely
2. Clear the memory database 
3. Run the interview prep workflow with fresh data
"""

import os
import sys
import shutil
from pathlib import Path

# Add project root to path
project_root = Path(__file__).parent
sys.path.append(str(project_root))

def clear_openai_cache():
    """Clear OpenAI cache directory"""
    try:
        cache_dir = Path("cache/openai_cache")
        if cache_dir.exists():
            shutil.rmtree(cache_dir)
            print("‚úÖ OpenAI cache cleared")
            return True
        else:
            print("‚ÑπÔ∏è  OpenAI cache directory not found")
            return True
    except Exception as e:
        print(f"‚ùå Error clearing OpenAI cache: {e}")
        return False

def clear_memory_database():
    """Clear memory database"""
    try:
        memory_files = [
            "memory/interview_memory.json",
            "memory/processed_emails.json",
            "memory/company_research_cache.json"
        ]
        
        cleared_count = 0
        for memory_file in memory_files:
            memory_path = Path(memory_file)
            if memory_path.exists():
                memory_path.unlink()
                cleared_count += 1
                print(f"‚úÖ Cleared {memory_file}")
        
        if cleared_count == 0:
            print("‚ÑπÔ∏è  No memory database files found")
        else:
            print(f"‚úÖ Cleared {cleared_count} memory database files")
        
        return True
    except Exception as e:
        print(f"‚ùå Error clearing memory database: {e}")
        return False

def clear_output_files():
    """Clear previous output files"""
    try:
        output_dir = Path("outputs/fullworkflow")
        if output_dir.exists():
            for file in output_dir.glob("*.txt"):
                file.unlink()
                print(f"‚úÖ Cleared output file: {file.name}")
        return True
    except Exception as e:
        print(f"‚ùå Error clearing output files: {e}")
        return False

def run_interview_prep_workflow():
    """Run the interview prep workflow"""
    try:
        print("\nüöÄ Running Interview Prep Workflow...")
        print("=" * 60)
        
        from workflows.interview_prep_workflow import InterviewPrepWorkflow
        
        # Set environment to disable caching for fresh results
        os.environ['DISABLE_OPENAI_CACHE'] = 'true'
        
        workflow = InterviewPrepWorkflow()
        results = workflow.run_workflow(max_emails=5, folder="demo")
        
        if results['success']:
            print(f"\nüéâ WORKFLOW COMPLETED SUCCESSFULLY!")
            print(f"üìä Results:")
            print(f"   üì• Total Emails: {results['total_emails_fetched']}")
            print(f"   üéØ Interview Emails: {results['interview_emails_found']}")
            print(f"   üìö Prep Guides Generated: {results['prep_guides_generated']}")
            print(f"   ‚è±Ô∏è  Processing Time: {results['processing_time']:.2f}s")
            
            # Show generated files
            if results['prep_guides_generated'] > 0:
                print(f"\nüìÅ Generated Files:")
                output_dir = Path("outputs/fullworkflow")
                for file in output_dir.glob("*.txt"):
                    print(f"   ‚úÖ {file.name}")
            
            return True
        else:
            print(f"\n‚ùå WORKFLOW FAILED!")
            print(f"   Errors: {results.get('errors', [])}")
            return False
            
    except Exception as e:
        print(f"‚ùå Error running workflow: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """Main execution"""
    
    print("üßπ CLEARING EVERYTHING AND RUNNING FRESH WORKFLOW")
    print("=" * 60)
    
    # Step 1: Clear OpenAI cache
    print("\n1Ô∏è‚É£  Clearing OpenAI cache...")
    cache_cleared = clear_openai_cache()
    
    # Step 2: Clear memory database
    print("\n2Ô∏è‚É£  Clearing memory database...")
    memory_cleared = clear_memory_database()
    
    # Step 3: Clear previous output files
    print("\n3Ô∏è‚É£  Clearing previous output files...")
    outputs_cleared = clear_output_files()
    
    # Step 4: Run workflow if clearing was successful
    if cache_cleared and memory_cleared and outputs_cleared:
        print("\n‚úÖ All clearing operations successful!")
        
        # Step 5: Run the workflow
        print("\n4Ô∏è‚É£  Running Interview Prep Workflow with fresh data...")
        workflow_success = run_interview_prep_workflow()
        
        print(f"\n{'='*60}")
        if workflow_success:
            print("üéä COMPLETE SUCCESS!")
            print("\nüìä What was generated:")
            print("   ‚úÖ Fresh OpenAI responses (no cache)")
            print("   ‚úÖ New memory entries")
            print("   ‚úÖ Complete technical metadata sections")
            print("   ‚úÖ Personalized prep guide sections")
            print("   ‚úÖ Real research citations in content")
            print("   ‚úÖ Detailed pipeline processing logs")
            
            print(f"\nüìÅ Check outputs/fullworkflow/ for your files!")
        else:
            print("‚ùå WORKFLOW EXECUTION FAILED")
        print(f"{'='*60}")
        
    else:
        print("\n‚ùå Clearing operations failed - skipping workflow execution")

if __name__ == "__main__":
    main()